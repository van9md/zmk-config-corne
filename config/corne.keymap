/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W            &kp E            &kp R              &kp T           &kp Y         &kp U          &kp I             &kp O             &kp P     &kp LEFT_BRACKET
&kp CAPSLOCK  &kp A  &hrm LEFT_WIN S  &hrm LEFT_ALT D  &hrm LEFT_SHIFT F  &hrm LCTRL G    &hrm RCTRL H  &hrm RSHIFT J  &hrm RIGHT_ALT K  &hrm RIGHT_WIN L  &kp SEMI  &kp SQT
&kp GRAVE     &kp Z  &kp X            &kp C            &kp V              &kp B           &kp N         &kp M          &kp COMMA         &kp DOT           &kp FSLH  &kp RIGHT_BRACKET
                                      &kp ESC          &mo 1              &kp SPACE       &kp RET       &mo 2          &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE     &kp LS(N1)  &kp LS(N2)     &kp LS(N3)    &kp LS(N4)      &kp LS(N5)    &kp LS(N6)        &kp LS(N7)            &kp LS(N8)  &kp LS(N9)             &kp LS(N0)         &kp LS(MINUS)
&kp CAPSLOCK  &kp N1      &kp N2         &kp N3        &kp N4          &kp N5        &kp N6            &kp N7                &kp N8      &kp N9                 &kp N0             &kp MINUS
&kp ESCAPE    &kp SLASH   &kp LS(COMMA)  &kp LS(BSLH)  &kp LS(PERIOD)  &trans        &kp LEFT_BRACKET  &kp LS(LEFT_BRACKET)  &kp EQUAL   &kp LS(RIGHT_BRACKET)  &kp RIGHT_BRACKET  &kp LS(EQUAL)
                                         &kp LGUI      &trans          &kp SPACE     &kp RET           &mo 3                 &kp DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4        &kp F5      &kp F6       &kp F7    &kp F8    &kp F9  &kp F10    &kp F11  &kp F12
&trans  &trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LSHIFT  &kp LCTRL    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&trans  &trans  &trans        &trans        &trans      &trans       &trans    &trans    &trans  &trans     &trans   &trans
                              &trans        &mo 3       &kp SPACE    &kp RET   &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans          &trans          &trans          &trans            &trans          &trans            &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1
&trans  &trans  &kp LG(N1)      &kp LG(N2)      &kp LG(N3)      &kp LG(N4)        &kp LG(N5)      &kp LG(NUMBER_6)  &trans  &trans  &bt BT_CLR    &trans
&trans  &trans  &kp LG(LS(N1))  &kp LG(LS(N2))  &kp LG(LS(N3))  &kp LG(LS(N4))    &kp LG(LS(N5))  &kp LG(LS(N6))    &trans  &trans  &trans        &trans
                                &trans          &trans          &trans            &trans          &trans            &trans
            >;
        };
    };
};
